// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Você na Câmara",
            "email": "email.vocenacamara@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/articles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Esta requisição é responsável por listar as matérias mais recentes disponíveis na plataforma.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matérias"
                ],
                "summary": "Listar matérias mais recentes",
                "operationId": "GetArticles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do tipo da matéria.",
                        "name": "typeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Parte do conteúdo das matérias, no título ou conteúdo.",
                        "name": "content",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID do deputado que elaborou a proposição.",
                        "name": "deputyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID do partido que elaborou a proposição.",
                        "name": "partyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID do autor externo que elaborou a proposição.",
                        "name": "externalAuthorId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Data a partir da qual as matérias podem ter sido criadas. Formato aceito: YYYY-MM-DD",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Data até a qual as matérias podem ter sido criadas. Formato aceito: YYYY-MM-DD",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Número da página. Por padrão é 1.",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Quantidade de matérias retornadas por página. Por padrão é 15 e os valores permitidos são entre 1 e 100.",
                        "name": "itemsPerPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requisição realizada com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerArticlePagination"
                        }
                    },
                    "400": {
                        "description": "Requisição mal formulada.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Acesso não autorizado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Requisição não processada devido a algum dos dados enviados serem inválidos.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "Ocorreu um erro inesperado durante o processamento da requisição.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Algum dos serviços/recursos está temporariamente indisponível.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/articles/trending": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Esta requisição é responsável por listar as matérias em alta disponíveis na plataforma.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matérias"
                ],
                "summary": "Listar matérias em alta",
                "operationId": "GetTrendingArticles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do tipo da matéria.",
                        "name": "typeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Parte do conteúdo das matérias, no título ou conteúdo.",
                        "name": "content",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID do deputado que elaborou a proposição.",
                        "name": "deputyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID do partido que elaborou a proposição.",
                        "name": "partyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID do autor externo que elaborou a proposição.",
                        "name": "externalAuthorId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Data a partir da qual as matérias podem ter sido criadas. Formato aceito: YYYY-MM-DD",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Data até a qual as matérias podem ter sido criadas. Formato aceito: YYYY-MM-DD",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Número da página. Por padrão é 1.",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Quantidade de matérias retornadas por página. Por padrão é 15 e os valores permitidos são entre 1 e 100.",
                        "name": "itemsPerPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requisição realizada com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerArticlePagination"
                        }
                    },
                    "400": {
                        "description": "Requisição mal formulada.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Acesso não autorizado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Requisição não processada devido a algum dos dados enviados serem inválidos.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "Ocorreu um erro inesperado durante o processamento da requisição.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Algum dos serviços/recursos está temporariamente indisponível.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/articles/trending/type": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Esta requisição é responsável por listar as matérias em alta pelos tipos de matérias.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matérias"
                ],
                "summary": "Listar matérias em alta pelos tipos de matérias",
                "operationId": "GetTrendingArticlesByTypeId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lista com os IDs dos tipos de matérias que devem ser retornados (Separados por vírgula). Por padrão retorna todos.",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Quantidade de matérias retornadas por tipo. Por padrão é 5 e os valores permitidos são entre 1 e 20.",
                        "name": "itemsPerType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requisição realizada com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerArticleTypeWithArticles"
                        }
                    },
                    "400": {
                        "description": "Requisição mal formulada.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Acesso não autorizado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "Ocorreu um erro inesperado durante o processamento da requisição.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Algum dos serviços/recursos está temporariamente indisponível.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/articles/view-later": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Esta requisição é responsável por listar as matérias marcadas para ver depois pelo usuário na plataforma. As matérias serão listadas na ordem que o usuário realizou a marcação das matérias.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matérias"
                ],
                "summary": "Listar matérias marcadas para ver depois pelo usuário",
                "operationId": "GetArticlesToViewLater",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do tipo da matéria.",
                        "name": "typeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Parte do conteúdo das matérias, no título ou conteúdo.",
                        "name": "content",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID do deputado que elaborou a proposição.",
                        "name": "deputyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID do partido que elaborou a proposição.",
                        "name": "partyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID do autor externo que elaborou a proposição.",
                        "name": "externalAuthorId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Data a partir da qual as matérias podem ter sido criadas. Formato aceito: YYYY-MM-DD",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Data até a qual as matérias podem ter sido criadas. Formato aceito: YYYY-MM-DD",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Número da página. Por padrão é 1.",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Quantidade de matérias retornadas por página. Por padrão é 15 e os valores permitidos são entre 1 e 100.",
                        "name": "itemsPerPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requisição realizada com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerArticlePagination"
                        }
                    },
                    "400": {
                        "description": "Requisição mal formulada.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Acesso não autorizado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Requisição não processada devido a algum dos dados enviados serem inválidos.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "Ocorreu um erro inesperado durante o processamento da requisição.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Algum dos serviços/recursos está temporariamente indisponível.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/articles/{articleId}/newsletter": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Esta requisição é responsável por buscar os detalhes de uma matéria do tipo boletim pelo ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matérias"
                ],
                "summary": "Buscar detalhes de uma matéria do tipo boletim pelo ID",
                "operationId": "GetNewsletterArticleById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID da matéria",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requisição realizada com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerNewsletterArticle"
                        }
                    },
                    "400": {
                        "description": "Requisição mal formulada.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Acesso não autorizado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "404": {
                        "description": "Recurso solicitado não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Requisição não processada devido a algum dos dados enviados serem inválidos.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "Ocorreu um erro inesperado durante o processamento da requisição.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Algum dos serviços/recursos está temporariamente indisponível.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/articles/{articleId}/proposition": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Esta requisição é responsável por buscar os detalhes de uma matéria dos tipos de proposições pelo ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matérias"
                ],
                "summary": "Buscar detalhes de uma matéria dos tipos de proposições pelo ID",
                "operationId": "GetPropositionArticleById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID da matéria",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requisição realizada com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerPropositionArticle"
                        }
                    },
                    "400": {
                        "description": "Requisição mal formulada.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Acesso não autorizado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "404": {
                        "description": "Recurso solicitado não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Requisição não processada devido a algum dos dados enviados serem inválidos.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "Ocorreu um erro inesperado durante o processamento da requisição.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Algum dos serviços/recursos está temporariamente indisponível.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/articles/{articleId}/rating": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Esta requisição é responsável pelo registro da avaliação de uma matéria pelo usuário.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matérias"
                ],
                "summary": "Avaliar matéria",
                "operationId": "SaveArticleRating",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID da matéria",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON com todos os dados necessários para que a avaliação da matéria seja realizada.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Rating"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Requisição realizada com sucesso."
                    },
                    "400": {
                        "description": "Requisição mal formulada.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Acesso não autorizado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "403": {
                        "description": "Acesso negado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "404": {
                        "description": "Recurso solicitado não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Requisição não processada devido a algum dos dados enviados serem inválidos.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "Ocorreu um erro inesperado durante o processamento da requisição.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Algum dos serviços/recursos está temporariamente indisponível.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/articles/{articleId}/view-later": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Esta requisição é responsável por adicionar ou remover a matéria da lista de matérias marcadas para ver depois pelo usuário.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matérias"
                ],
                "summary": "Adicionar ou remover matéria da lista de matérias marcadas para ver depois pelo usuário",
                "operationId": "SaveArticleToViewLater",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID da matéria",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON com todos os dados necessários para marcar/desmarcar a matéria para ver depois.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ViewLater"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Requisição realizada com sucesso."
                    },
                    "400": {
                        "description": "Requisição mal formulada.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Acesso não autorizado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "403": {
                        "description": "Acesso negado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "404": {
                        "description": "Recurso solicitado não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Requisição não processada devido a algum dos dados enviados serem inválidos.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "Ocorreu um erro inesperado durante o processamento da requisição.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Algum dos serviços/recursos está temporariamente indisponível.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Esta requisição é responsável por realizar a atualização dos tokens de acesso do usuário na plataforma.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Autenticação"
                ],
                "summary": "Atualizar tokens de acesso",
                "operationId": "Refresh",
                "parameters": [
                    {
                        "description": "JSON com todos os dados necessários para que a atualização dos tokens de acesso seja realizada.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RefreshTokens"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requisição realizada com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerUser"
                        }
                    },
                    "400": {
                        "description": "Requisição mal formulada.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Acesso não autorizado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Requisição não processada devido a algum dos dados enviados serem inválidos.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "Ocorreu um erro inesperado durante o processamento da requisição.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Algum dos serviços/recursos está temporariamente indisponível.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/auth/sign-in": {
            "post": {
                "description": "Esta requisição é responsável por permitir a entrada do usuário em sua conta na plataforma.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Autenticação"
                ],
                "summary": "Fazer login",
                "operationId": "SignIn",
                "parameters": [
                    {
                        "description": "JSON com todos os dados necessários para que o login seja realizado.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SignIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requisição realizada com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerUser"
                        }
                    },
                    "400": {
                        "description": "Requisição mal formulada.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Acesso não autorizado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "404": {
                        "description": "Recurso solicitado não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Requisição não processada devido a algum dos dados enviados serem inválidos.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "Ocorreu um erro inesperado durante o processamento da requisição.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Algum dos serviços/recursos está temporariamente indisponível.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/auth/sign-out": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Esta requisição é responsável por realizar o encerramento do acesso do usuário a plataforma.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Autenticação"
                ],
                "summary": "Fazer logout",
                "operationId": "SignOut",
                "responses": {
                    "204": {
                        "description": "Requisição realizada com sucesso."
                    },
                    "400": {
                        "description": "Requisição mal formulada.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Acesso não autorizado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "403": {
                        "description": "Acesso negado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "Ocorreu um erro inesperado durante o processamento da requisição.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Algum dos serviços/recursos está temporariamente indisponível.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "Esta requisição é responsável por permitir o cadastro do usuário na plataforma.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Autenticação"
                ],
                "summary": "Criar conta",
                "operationId": "SignUp",
                "parameters": [
                    {
                        "description": "JSON com todos os dados necessários para que a criação da conta seja realizada.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SignUp"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Requisição realizada com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerUser"
                        }
                    },
                    "400": {
                        "description": "Requisição mal formulada.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Acesso não autorizado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "409": {
                        "description": "Requisição contém dados que já estão cadastrados no banco de dados e que devem ser únicos.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Requisição não processada devido a algum dos dados enviados serem inválidos.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "Ocorreu um erro inesperado durante o processamento da requisição.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Algum dos serviços/recursos está temporariamente indisponível.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/resources": {
            "get": {
                "description": "Esta requisição é responsável por listar todos os recursos da plataforma.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recursos"
                ],
                "summary": "Listar todos os recursos",
                "operationId": "GetResources",
                "responses": {
                    "200": {
                        "description": "Requisição realizada com sucesso.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.SwaggerResources"
                            }
                        }
                    },
                    "401": {
                        "description": "Acesso não autorizado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "Ocorreu um erro inesperado durante o processamento da requisição.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Algum dos serviços/recursos está temporariamente indisponível.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/user/activate-account": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Esta requisição é responsável por ativar a conta do usuário, comprovando que o endereço de email fornecido no cadastro realmente existe e pertence ao usuário.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuário"
                ],
                "summary": "Ativar conta do usuário",
                "operationId": "ActivateAccount",
                "parameters": [
                    {
                        "description": "JSON com todos os dados necessários para que a ativação da conta seja realizada.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserAccountActivation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requisição realizada com sucesso.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.SwaggerUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Requisição mal formulada ou o código de ativação informado é inválido.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Acesso não autorizado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "403": {
                        "description": "Acesso negado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "409": {
                        "description": "A conta do usuário já está ativa.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "Ocorreu um erro inesperado durante o processamento da requisição.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Algum dos serviços/recursos está temporariamente indisponível.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/user/resend-activation-email": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Esta requisição é responsável por reenviar o email de ativação da conta do usuário. A cada envio, um novo código é gerado, invalidando o código anterior.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuário"
                ],
                "summary": "Reenviar email de ativação da conta do usuário",
                "operationId": "ResendActivationEmail",
                "responses": {
                    "204": {
                        "description": "Requisição realizada com sucesso."
                    },
                    "400": {
                        "description": "Requisição mal formulada.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Acesso não autorizado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "403": {
                        "description": "Acesso negado.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "409": {
                        "description": "A conta do usuário já está ativa.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "Ocorreu um erro inesperado durante o processamento da requisição.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Algum dos serviços/recursos está temporariamente indisponível.",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.Rating": {
            "type": "object",
            "properties": {
                "rating": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "request.RefreshTokens": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InByb2YiL..."
                }
            }
        },
        "request.SignIn": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@email.com"
                },
                "password": {
                    "type": "string",
                    "example": "luc@ssantos123"
                }
            }
        },
        "request.SignUp": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@email.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "Lucas"
                },
                "last_name": {
                    "type": "string",
                    "example": "Santos"
                },
                "password": {
                    "type": "string",
                    "example": "luc@ssantos123"
                }
            }
        },
        "request.UserAccountActivation": {
            "type": "object",
            "properties": {
                "activation_code": {
                    "type": "string",
                    "example": "NJBJQ3"
                }
            }
        },
        "request.ViewLater": {
            "type": "object",
            "properties": {
                "view_later": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "response.SwaggerArticle": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number",
                    "example": 3.5
                },
                "content": {
                    "type": "string",
                    "example": "Foi sancionado o projeto de lei que altera a Lei n° 11.033 para prorrogar o Regime Tributário..."
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-01-05T20:25:19Z"
                },
                "id": {
                    "type": "string",
                    "example": "b27947d6-3224-4479-8da4-7917ae16b34d"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://image.url.com/article/b27947d6-3224-4479-8da4-7917ae16b34d/image.png"
                },
                "number_of_ratings": {
                    "type": "integer",
                    "example": 452
                },
                "reference_date_time": {
                    "type": "string",
                    "example": "2024-01-05T20:25:19Z"
                },
                "title": {
                    "type": "string",
                    "example": "Novo projeto de lei impulsiona crescimento do setor portuário até 2028"
                },
                "type": {
                    "$ref": "#/definitions/response.SwaggerArticleType"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-01-05T20:25:19Z"
                },
                "user_rating": {
                    "type": "integer",
                    "example": 3
                },
                "view_later": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "response.SwaggerArticlePagination": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerArticle"
                    }
                },
                "items_per_page": {
                    "type": "integer",
                    "example": 15
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 4562
                }
            }
        },
        "response.SwaggerArticleType": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string",
                    "example": "#C4170C"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-08-14T12:22:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Projeto de Lei"
                },
                "id": {
                    "type": "string",
                    "example": "560206f4-7360-4e21-8e45-33026f7e0953"
                },
                "sort_order": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-08-14T12:22:00Z"
                }
            }
        },
        "response.SwaggerArticleTypeWithArticles": {
            "type": "object",
            "properties": {
                "articles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerArticle"
                    }
                },
                "color": {
                    "type": "string",
                    "example": "#C4170C"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-08-14T12:22:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Projeto de Lei"
                },
                "id": {
                    "type": "string",
                    "example": "560206f4-7360-4e21-8e45-33026f7e0953"
                },
                "sort_order": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-08-14T12:22:00Z"
                }
            }
        },
        "response.SwaggerDeputy": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2022-08-07T15:55:00Z"
                },
                "electoral_name": {
                    "type": "string",
                    "example": "José do Povo"
                },
                "id": {
                    "type": "string",
                    "example": "a4b04454-f426-44d2-843e-1331510b19ad"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://www.camara.leg.br/internet/deputado/bandep/87624.jpg"
                },
                "name": {
                    "type": "string",
                    "example": "José da Silva Santos"
                },
                "party": {
                    "$ref": "#/definitions/response.SwaggerParty"
                },
                "party_in_the_proposal": {
                    "$ref": "#/definitions/response.SwaggerParty"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2022-08-07T15:55:00Z"
                }
            }
        },
        "response.SwaggerDeputyResource": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2022-08-07T15:55:00Z"
                },
                "electoral_name": {
                    "type": "string",
                    "example": "José do Povo"
                },
                "id": {
                    "type": "string",
                    "example": "a4b04454-f426-44d2-843e-1331510b19ad"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://www.camara.leg.br/internet/deputado/bandep/87624.jpg"
                },
                "name": {
                    "type": "string",
                    "example": "José da Silva Santos"
                },
                "party": {
                    "$ref": "#/definitions/response.SwaggerParty"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2022-08-07T15:55:00Z"
                }
            }
        },
        "response.SwaggerExternalAuthor": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2020-12-13T18:37:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "9d543e6f-20e3-4895-83e4-26b6a976580e"
                },
                "name": {
                    "type": "string",
                    "example": "Organização Você na Câmara"
                },
                "type": {
                    "type": "string",
                    "example": "Org da Câmara"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-12-13T18:37:00Z"
                }
            }
        },
        "response.SwaggerHttpError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Algo errado aconteceu..."
                }
            }
        },
        "response.SwaggerNewsletterArticle": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number",
                    "example": 4.5
                },
                "content": {
                    "type": "string",
                    "example": "O presidente enviou ao Congresso Nacional um projeto de lei que permite a concessão de descontos fiscais..."
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-12-24T19:15:22Z"
                },
                "id": {
                    "type": "string",
                    "example": "7963a6dd-f0b8-4065-8e56-6d2a79626db7"
                },
                "number_of_ratings": {
                    "type": "integer",
                    "example": 743
                },
                "proposition_articles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerArticle"
                    }
                },
                "reference_date": {
                    "type": "string",
                    "example": "2023-12-23T16:34:14Z"
                },
                "reference_date_time": {
                    "type": "string",
                    "example": "2023-12-24T19:15:22Z"
                },
                "title": {
                    "type": "string",
                    "example": "Boletim do dia 26/02/2024"
                },
                "type": {
                    "$ref": "#/definitions/response.SwaggerArticleType"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-12-24T19:15:22Z"
                },
                "user_rating": {
                    "type": "integer",
                    "example": 5
                },
                "view_later": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "response.SwaggerParty": {
            "type": "object",
            "properties": {
                "acronym": {
                    "type": "string",
                    "example": "PVNC"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-05-19T18:10:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "9bb4028f-6fa8-493a-9fe8-e3bbd341c794"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://www.camara.leg.br/internet/Deputado/img/partidos/VNC.gif"
                },
                "name": {
                    "type": "string",
                    "example": "Partido Você na Câmara"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-05-19T18:10:00Z"
                }
            }
        },
        "response.SwaggerPropositionArticle": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number",
                    "example": 2.5
                },
                "content": {
                    "type": "string",
                    "example": "O presente requerimento foi elaborado pelos deputados..."
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-08-09T14:55:00Z"
                },
                "deputies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerDeputy"
                    }
                },
                "external_authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerExternalAuthor"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "9dc67bd9-674f-4e4d-9536-07485335c362"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://www.vnc.com.br/news/proposition/image/87624.jpg"
                },
                "newsletter_article": {
                    "$ref": "#/definitions/response.SwaggerArticle"
                },
                "number_of_ratings": {
                    "type": "integer",
                    "example": 249
                },
                "original_text_url": {
                    "type": "string",
                    "example": "https://www.camara.leg.br/proposicoesWeb/prop_mostrarintegra?codteor=4865485"
                },
                "reference_date_time": {
                    "type": "string"
                },
                "submitted_at": {
                    "type": "string",
                    "example": "2023-08-09T14:25:00Z"
                },
                "title": {
                    "type": "string",
                    "example": "Requerimento de Votação Nominal-Destaque de Emenda"
                },
                "type": {
                    "$ref": "#/definitions/response.SwaggerArticleType"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-08-09T14:55:00Z"
                },
                "user_rating": {
                    "type": "integer",
                    "example": 5
                },
                "view_later": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "response.SwaggerResources": {
            "type": "object",
            "properties": {
                "article_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerArticleType"
                    }
                },
                "deputies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerDeputyResource"
                    }
                },
                "external_authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerExternalAuthor"
                    }
                },
                "parties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerParty"
                    }
                }
            }
        },
        "response.SwaggerUser": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InByb2YiL..."
                },
                "created_at": {
                    "type": "string",
                    "example": "2022-09-23T18:20:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "example@email.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "Lucas"
                },
                "id": {
                    "type": "string",
                    "example": "54b094b23-f426-89d2-843e-1335410b18df"
                },
                "last_name": {
                    "type": "string",
                    "example": "Santos"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InByb2YiL..."
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "user"
                    ]
                },
                "updated_at": {
                    "type": "string",
                    "example": "2022-09-23T18:20:00Z"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v1",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "API da Plataforma Você na Câmara",
	Description:      "Conjunto de rotas responsável por gerenciar a manipulação de dados da Plataforma Você na Câmara.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
