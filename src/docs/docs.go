// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Você na Câmara",
            "email": "email.vocenacamara@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/articles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for listing the most recent articles available on the platform.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "List most recent articles",
                "operationId": "GetArticles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article type ID",
                        "name": "typeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Article specific type ID",
                        "name": "specificTypeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Part of the content of the articles, in the title or content",
                        "name": "content",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date from which the articles were created. Accepted format: YYYY-MM-DD",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date until which the articles were created. Accepted format: YYYY-MM-DD",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the deputy who drafted the proposition",
                        "name": "propositionDeputyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the party that drafted the proposition",
                        "name": "propositionPartyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the external author who drafted the proposition",
                        "name": "propositionExternalAuthorId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date from which the voting results were announced. Accepted format: YYYY-MM-DD",
                        "name": "votingStartDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date until which the voting results were announced. Accepted format: YYYY-MM-DD",
                        "name": "votingEndDate",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Is the voting approved?",
                        "name": "isVotingApproved",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the legislative body responsible for the voting",
                        "name": "votingLegislativeBodyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date from which the events occurred. Accepted format: YYYY-MM-DD",
                        "name": "eventStartDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date until which the events occurred. Accepted format: YYYY-MM-DD",
                        "name": "eventEndDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the event situation",
                        "name": "eventSituationId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the legislative body responsible for the event",
                        "name": "eventLegislativeBodyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the rapporteur (deputy) for one or more items on the event agenda",
                        "name": "eventRapporteurId",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Remove events in the future?",
                        "name": "removeEventsInTheFuture",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number. By default, it is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of articles returned per page. The default is 15 and the allowed values are between 1 and 100",
                        "name": "itemsPerPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/swagger.ArticlePagination"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        },
        "/articles/trending": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for listing trending articles on the platform.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "List trending articles",
                "operationId": "GetTrendingArticles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article type ID",
                        "name": "typeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Article specific type ID",
                        "name": "specificTypeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Part of the content of the articles, in the title or content",
                        "name": "content",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date from which the articles were created. Accepted format: YYYY-MM-DD",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date until which the articles were created. Accepted format: YYYY-MM-DD",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the deputy who drafted the proposition",
                        "name": "propositionDeputyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the party that drafted the proposition",
                        "name": "propositionPartyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the external author who drafted the proposition",
                        "name": "propositionExternalAuthorId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date from which the voting results were announced. Accepted format: YYYY-MM-DD",
                        "name": "votingStartDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date until which the voting results were announced. Accepted format: YYYY-MM-DD",
                        "name": "votingEndDate",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Is the voting approved?",
                        "name": "isVotingApproved",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the legislative body responsible for the voting",
                        "name": "votingLegislativeBodyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date from which the events occurred. Accepted format: YYYY-MM-DD",
                        "name": "eventStartDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date until which the events occurred. Accepted format: YYYY-MM-DD",
                        "name": "eventEndDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the event situation",
                        "name": "eventSituationId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the legislative body responsible for the event",
                        "name": "eventLegislativeBodyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the rapporteur (deputy) for one or more items on the event agenda",
                        "name": "eventRapporteurId",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Remove events in the future?",
                        "name": "removeEventsInTheFuture",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number. By default, it is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of articles returned per page. The default is 15 and the allowed values are between 1 and 100",
                        "name": "itemsPerPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/swagger.ArticlePagination"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        },
        "/articles/trending/type": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for listing the trending articles by article types or specific types.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "List trending articles by article types",
                "operationId": "GetTrendingArticlesByType",
                "parameters": [
                    {
                        "type": "string",
                        "description": "List of IDs of the types of articles that should be returned (separated by commas). By default, it returns all types",
                        "name": "articleTypeIds",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "List of IDs of the specific types of articles that should be returned (separated by commas). By default, it returns all specific types",
                        "name": "articleSpecificTypeIds",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of articles returned by type. The default is 5 and the allowed values are between 1 and 20",
                        "name": "itemsPerType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/swagger.ArticleTypeWithSpecificTypes"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        },
        "/articles/view-later": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for listing the articles bookmarked for later viewing by the user on the platform. The articles will be listed in the order in which the user bookmarked the articles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "List articles bookmarked for later viewing by the user",
                "operationId": "GetArticlesToViewLater",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article type ID",
                        "name": "typeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Article specific type ID",
                        "name": "specificTypeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Part of the content of the articles, in the title or content",
                        "name": "content",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date from which the articles were created. Accepted format: YYYY-MM-DD",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date until which the articles were created. Accepted format: YYYY-MM-DD",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the deputy who drafted the proposition",
                        "name": "propositionDeputyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the party that drafted the proposition",
                        "name": "propositionPartyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the external author who drafted the proposition",
                        "name": "propositionExternalAuthorId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date from which the voting results were announced. Accepted format: YYYY-MM-DD",
                        "name": "votingStartDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date until which the voting results were announced. Accepted format: YYYY-MM-DD",
                        "name": "votingEndDate",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Is the voting approved?",
                        "name": "isVotingApproved",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the legislative body responsible for the voting",
                        "name": "votingLegislativeBodyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date from which the events occurred. Accepted format: YYYY-MM-DD",
                        "name": "eventStartDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date until which the events occurred. Accepted format: YYYY-MM-DD",
                        "name": "eventEndDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the event situation",
                        "name": "eventSituationId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the legislative body responsible for the event",
                        "name": "eventLegislativeBodyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the rapporteur (deputy) for one or more items on the event agenda",
                        "name": "eventRapporteurId",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Remove events in the future?",
                        "name": "removeEventsInTheFuture",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number. By default, it is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of articles returned per page. The default is 15 and the allowed values are between 1 and 100",
                        "name": "itemsPerPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/swagger.ArticlePagination"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        },
        "/articles/{articleId}/event": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for looking up the details of an article of an event by the article ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get article details by ID (Only for event articles)",
                "operationId": "GetEventArticleById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/swagger.EventArticle"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "404": {
                        "description": "Requested resource not found",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        },
        "/articles/{articleId}/newsletter": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for looking up the details of an article of a newsletter by the article ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get article details by ID (Only for newsletter articles)",
                "operationId": "GetNewsletterArticleById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/swagger.NewsletterArticle"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "404": {
                        "description": "Requested resource not found",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        },
        "/articles/{articleId}/proposition": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for looking up the details of an article of a proposition by the article ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get article details by ID (Only for proposition articles)",
                "operationId": "GetPropositionArticleById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/swagger.PropositionArticle"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "404": {
                        "description": "Requested resource not found",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        },
        "/articles/{articleId}/rating": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for recording the user's rating of an article.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Rate article",
                "operationId": "SaveArticleRating",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Rating"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "404": {
                        "description": "Requested resource not found",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        },
        "/articles/{articleId}/view-later": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for adding or removing the article from the list of articles bookmarked for later viewing by the user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Add or remove an article from the list of articles bookmarked for later viewing by the user",
                "operationId": "SaveArticleToViewLater",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ViewLater"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "404": {
                        "description": "Requested resource not found",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        },
        "/articles/{articleId}/voting": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for looking up the details of an article of a voting by the article ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get article details by ID (Only for voting articles)",
                "operationId": "GetVotingArticleById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/swagger.VotingArticle"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "404": {
                        "description": "Requested resource not found",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "This request is responsible for refreshing the user's access tokens on the platform.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access tokens",
                "operationId": "Refresh",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RefreshTokens"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/swagger.User"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        },
        "/auth/sign-in": {
            "post": {
                "description": "This request is responsible for signing the user into the platform.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign In",
                "operationId": "SignIn",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SignIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/swagger.User"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        },
        "/auth/sign-out": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for signing the user out of the platform.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign Out",
                "operationId": "SignOut",
                "responses": {
                    "204": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "This request is responsible for signing the user up to the platform.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign Up",
                "operationId": "SignUp",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SignUp"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/swagger.User"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "409": {
                        "description": "Some of the data provided is conflicting",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        },
        "/resources": {
            "get": {
                "description": "This request is responsible for listing all the platform resources.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resources"
                ],
                "summary": "List all resources",
                "operationId": "GetResources",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/swagger.Resources"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        },
        "/user/activate-account": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for activating the user's account, proving that the email address provided during registration really exists and belongs to the user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Activate user account",
                "operationId": "ActivateAccount",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserAccountActivation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/swagger.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "409": {
                        "description": "Some of the data provided is conflicting",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        },
        "/user/resend-activation-email": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for resending the user account activation email. Each time it is sent, a new code is generated, invalidating the previous code.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Resend user account activation email",
                "operationId": "ResendActivationEmail",
                "responses": {
                    "204": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "409": {
                        "description": "Some of the data provided is conflicting",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/swagger.HttpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.Rating": {
            "type": "object",
            "properties": {
                "rating": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "request.RefreshTokens": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InByb2YiL..."
                }
            }
        },
        "request.SignIn": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@email.com"
                },
                "password": {
                    "type": "string",
                    "example": "luc@ssantos123"
                }
            }
        },
        "request.SignUp": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@email.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "Lucas"
                },
                "last_name": {
                    "type": "string",
                    "example": "Santos"
                },
                "password": {
                    "type": "string",
                    "example": "luc@ssantos123"
                }
            }
        },
        "request.UserAccountActivation": {
            "type": "object",
            "properties": {
                "activation_code": {
                    "type": "string",
                    "example": "NJBJQ3"
                }
            }
        },
        "request.ViewLater": {
            "type": "object",
            "properties": {
                "view_later": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "swagger.AgendaItemRegime": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Matéria Sobre a Mesa"
                },
                "id": {
                    "type": "string",
                    "example": "667084f2-eddb-495b-b50f-8f60a2949a92"
                }
            }
        },
        "swagger.Article": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number",
                    "example": 3.5
                },
                "content": {
                    "type": "string",
                    "example": "Foi sancionado o projeto de lei que altera a Lei n° 11.033 para prorrogar o Regime Tributário..."
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-01-05T20:25:19.98031Z"
                },
                "id": {
                    "type": "string",
                    "example": "b27947d6-3224-4479-8da4-7917ae16b34d"
                },
                "multimedia_description": {
                    "type": "string",
                    "example": "A imagem retrata uma pequena cidade costeira afetada por uma forte chuva..."
                },
                "multimedia_url": {
                    "type": "string",
                    "example": "https://image.url.com/article/b27947d6-3224-4479-8da4-7917ae16b34d/image.png"
                },
                "number_of_ratings": {
                    "type": "integer",
                    "example": 452
                },
                "situation": {
                    "$ref": "#/definitions/swagger.ArticleSituation"
                },
                "title": {
                    "type": "string",
                    "example": "Novo projeto de lei impulsiona crescimento do setor portuário até 2028"
                },
                "type": {
                    "$ref": "#/definitions/swagger.ArticleTypeWithSpecificType"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-01-05T20:25:19.98031Z"
                },
                "user_rating": {
                    "type": "integer",
                    "example": 3
                },
                "view_later": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "swagger.ArticlePagination": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.Article"
                    }
                },
                "items_per_page": {
                    "type": "integer",
                    "example": 15
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 4562
                }
            }
        },
        "swagger.ArticleSituation": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string",
                    "example": "#D2D2D2"
                },
                "description": {
                    "type": "string",
                    "example": "Em Andamento"
                },
                "ends_at": {
                    "type": "string",
                    "example": "2023-02-15T17:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "16f6b271-fc96-4143-972c-0a2ac149dc55"
                },
                "is_approved": {
                    "type": "boolean",
                    "example": true
                },
                "starts_at": {
                    "type": "string",
                    "example": "2023-02-12T10:00:00Z"
                }
            }
        },
        "swagger.ArticleSpecificType": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string",
                    "example": "#C4170C"
                },
                "description": {
                    "type": "string",
                    "example": "Projeto de Lei"
                },
                "id": {
                    "type": "string",
                    "example": "111c1a6d-d061-40b2-ad39-ec714f05c81c"
                }
            }
        },
        "swagger.ArticleType": {
            "type": "object",
            "properties": {
                "codes": {
                    "type": "string",
                    "example": "proposition"
                },
                "color": {
                    "type": "string",
                    "example": "#06D13C"
                },
                "description": {
                    "type": "string",
                    "example": "Proposições"
                },
                "id": {
                    "type": "string",
                    "example": "560206f4-7360-4e21-8e45-33026f7e0953"
                }
            }
        },
        "swagger.ArticleTypeWithArticles": {
            "type": "object",
            "properties": {
                "articles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.Article"
                    }
                },
                "color": {
                    "type": "string",
                    "example": "#C4170C"
                },
                "description": {
                    "type": "string",
                    "example": "Projeto de Lei"
                },
                "id": {
                    "type": "string",
                    "example": "111c1a6d-d061-40b2-ad39-ec714f05c81c"
                }
            }
        },
        "swagger.ArticleTypeWithSpecificType": {
            "type": "object",
            "properties": {
                "codes": {
                    "type": "string",
                    "example": "proposition"
                },
                "color": {
                    "type": "string",
                    "example": "#06D13C"
                },
                "description": {
                    "type": "string",
                    "example": "Proposições"
                },
                "id": {
                    "type": "string",
                    "example": "560206f4-7360-4e21-8e45-33026f7e0953"
                },
                "specific_type": {
                    "$ref": "#/definitions/swagger.ArticleSpecificType"
                }
            }
        },
        "swagger.ArticleTypeWithSpecificTypes": {
            "type": "object",
            "properties": {
                "codes": {
                    "type": "string",
                    "example": "proposition"
                },
                "color": {
                    "type": "string",
                    "example": "#06D13C"
                },
                "description": {
                    "type": "string",
                    "example": "Proposições"
                },
                "id": {
                    "type": "string",
                    "example": "560206f4-7360-4e21-8e45-33026f7e0953"
                },
                "specific_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.ArticleTypeWithArticles"
                    }
                }
            }
        },
        "swagger.Deputy": {
            "type": "object",
            "properties": {
                "electoral_name": {
                    "type": "string",
                    "example": "José do Povo"
                },
                "federated_unit": {
                    "type": "string",
                    "example": "AL"
                },
                "id": {
                    "type": "string",
                    "example": "a4b04454-f426-44d2-843e-1331510b19ad"
                },
                "image_description": {
                    "type": "string",
                    "example": "Foto do(a) deputado(a) federal José do Povo (PVNC-AL)"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://www.camara.leg.br/internet/deputado/bandep/87624.jpg"
                },
                "name": {
                    "type": "string",
                    "example": "José da Silva Santos"
                },
                "party": {
                    "$ref": "#/definitions/swagger.Party"
                },
                "previous_federated_unit": {
                    "type": "string",
                    "example": "SP"
                },
                "previous_party": {
                    "$ref": "#/definitions/swagger.Party"
                }
            }
        },
        "swagger.DeputyResource": {
            "type": "object",
            "properties": {
                "electoral_name": {
                    "type": "string",
                    "example": "José do Povo"
                },
                "federated_unit": {
                    "type": "string",
                    "example": "AL"
                },
                "id": {
                    "type": "string",
                    "example": "a4b04454-f426-44d2-843e-1331510b19ad"
                },
                "image_description": {
                    "type": "string",
                    "example": "Foto do(a) deputado(a) federal José do Povo (PVNC-AL)"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://www.camara.leg.br/internet/deputado/bandep/87624.jpg"
                },
                "name": {
                    "type": "string",
                    "example": "José da Silva Santos"
                },
                "party": {
                    "$ref": "#/definitions/swagger.Party"
                }
            }
        },
        "swagger.EventAgendaItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "a1b5ae2e-b3e7-443d-b87d-dca789224578"
                },
                "proposition": {
                    "$ref": "#/definitions/swagger.Article"
                },
                "rapporteur": {
                    "$ref": "#/definitions/swagger.Deputy"
                },
                "regime": {
                    "$ref": "#/definitions/swagger.AgendaItemRegime"
                },
                "related_proposition": {
                    "$ref": "#/definitions/swagger.Article"
                },
                "situation": {
                    "type": "string",
                    "example": "Discussão em turno único. Encerrada a discussão..."
                },
                "title": {
                    "type": "string",
                    "example": "PL 132/4567"
                },
                "topic": {
                    "type": "string",
                    "example": "Discussão"
                },
                "voting": {
                    "$ref": "#/definitions/swagger.Article"
                }
            }
        },
        "swagger.EventArticle": {
            "type": "object",
            "properties": {
                "agenda_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.EventAgendaItem"
                    }
                },
                "average_rating": {
                    "type": "number",
                    "example": 2.5
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-08-22T10:39:14.465814Z"
                },
                "description_content": {
                    "type": "string",
                    "example": "Discussão e votação de propostas legislativas..."
                },
                "ends_at": {
                    "type": "string",
                    "example": "2023-08-24T18:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "e36492f7-5305-4333-9aea-05dcf3689693"
                },
                "is_internal": {
                    "type": "boolean",
                    "example": true
                },
                "legislative_bodies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.LegislativeBody"
                    }
                },
                "location": {
                    "type": "string",
                    "example": "Plenário da Câmara dos Deputados"
                },
                "newsletter": {
                    "$ref": "#/definitions/swagger.Article"
                },
                "number_of_ratings": {
                    "type": "integer",
                    "example": 2
                },
                "requirements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.Article"
                    }
                },
                "situation": {
                    "$ref": "#/definitions/swagger.EventSituation"
                },
                "starts_at": {
                    "type": "string",
                    "example": "2023-08-24T13:00:00Z"
                },
                "title": {
                    "type": "string",
                    "example": "TCU Pede Ação Urgente contra Dívida Pública..."
                },
                "type": {
                    "$ref": "#/definitions/swagger.ArticleTypeWithSpecificType"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-08-22T10:39:14.465814Z"
                },
                "user_rating": {
                    "type": "integer",
                    "example": 4
                },
                "video_url": {
                    "type": "string",
                    "example": "https://video.url.com/article/e36492f7-5305-4333-9aea-05dcf3689693/video.mp4"
                },
                "view_later": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "swagger.EventSituation": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string",
                    "example": "#0047AB"
                },
                "description": {
                    "type": "string",
                    "example": "Encerrado"
                },
                "id": {
                    "type": "string",
                    "example": "0f7f6406-bbce-4a26-aa02-c1694bda5e72"
                }
            }
        },
        "swagger.EventType": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string",
                    "example": "#006767"
                },
                "description": {
                    "type": "string",
                    "example": "Reunião Deliberativa"
                },
                "id": {
                    "type": "string",
                    "example": "2371ffd1-67d0-40b2-b6ee-dde3948cbb80"
                }
            }
        },
        "swagger.ExternalAuthor": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9d543e6f-20e3-4895-83e4-26b6a976580e"
                },
                "name": {
                    "type": "string",
                    "example": "Organização Você na Câmara"
                },
                "type": {
                    "$ref": "#/definitions/swagger.ExternalAuthorType"
                }
            }
        },
        "swagger.ExternalAuthorType": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Órgão Do Poder Legislativo"
                },
                "id": {
                    "type": "string",
                    "example": "344b3941-69fb-4715-a7e5-6afc21cd3e48"
                }
            }
        },
        "swagger.HttpError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Something went wrong..."
                }
            }
        },
        "swagger.LegislativeBody": {
            "type": "object",
            "properties": {
                "acronym": {
                    "type": "string",
                    "example": "2009"
                },
                "id": {
                    "type": "string",
                    "example": "31991060-fa3d-4647-aea5-b17b41de6a36"
                },
                "name": {
                    "type": "string",
                    "example": "Comissão de Educação"
                },
                "type": {
                    "$ref": "#/definitions/swagger.LegislativeBodyType"
                }
            }
        },
        "swagger.LegislativeBodyType": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Comissão Mista Permanente"
                },
                "id": {
                    "type": "string",
                    "example": "3440489a-d787-447f-80dd-51c0c577f07f"
                }
            }
        },
        "swagger.NewsletterArticle": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number",
                    "example": 4.5
                },
                "content": {
                    "type": "string",
                    "example": "O presidente enviou ao Congresso Nacional um projeto de lei que permite a concessão de descontos fiscais..."
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-12-24T19:15:22.90905Z"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.Article"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "7963a6dd-f0b8-4065-8e56-6d2a79626db7"
                },
                "number_of_ratings": {
                    "type": "integer",
                    "example": 743
                },
                "propositions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.Article"
                    }
                },
                "reference_date": {
                    "type": "string",
                    "example": "2023-12-23T16:34:14.441877Z"
                },
                "title": {
                    "type": "string",
                    "example": "Boletim do dia 26/02/2024"
                },
                "type": {
                    "$ref": "#/definitions/swagger.ArticleType"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-12-24T19:15:22.90905Z"
                },
                "user_rating": {
                    "type": "integer",
                    "example": 5
                },
                "view_later": {
                    "type": "boolean",
                    "example": true
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.Article"
                    }
                }
            }
        },
        "swagger.Party": {
            "type": "object",
            "properties": {
                "acronym": {
                    "type": "string",
                    "example": "PVNC"
                },
                "id": {
                    "type": "string",
                    "example": "9bb4028f-6fa8-493a-9fe8-e3bbd341c794"
                },
                "image_description": {
                    "type": "string",
                    "example": "Logo do Partido Você na Câmara (PVNC)"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://www.camara.leg.br/internet/Deputado/img/partidos/VNC.gif"
                },
                "name": {
                    "type": "string",
                    "example": "Partido Você na Câmara"
                }
            }
        },
        "swagger.PropositionArticle": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number",
                    "example": 2.5
                },
                "content": {
                    "type": "string",
                    "example": "O presente requerimento foi elaborado pelos deputados..."
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-08-09T14:55:00.465814Z"
                },
                "deputies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.Deputy"
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.Article"
                    }
                },
                "external_authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.ExternalAuthor"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "9dc67bd9-674f-4e4d-9536-07485335c362"
                },
                "image_description": {
                    "type": "string",
                    "example": "A imagem retrata uma pequena cidade costeira afetada por uma forte chuva..."
                },
                "image_url": {
                    "type": "string",
                    "example": "https://www.vnc.com.br/news/proposition/image/87624.jpg"
                },
                "newsletter": {
                    "$ref": "#/definitions/swagger.Article"
                },
                "number_of_ratings": {
                    "type": "integer",
                    "example": 249
                },
                "original_text_mime_type": {
                    "type": "string",
                    "example": "https://www.camara.leg.br/proposicoesWeb/prop_mostrarintegra?codteor=4865485"
                },
                "original_text_url": {
                    "type": "string",
                    "example": "https://www.camara.leg.br/proposicoesWeb/prop_mostrarintegra?codteor=4865485"
                },
                "submitted_at": {
                    "type": "string",
                    "example": "2023-08-09T14:25:00Z"
                },
                "title": {
                    "type": "string",
                    "example": "Requerimento de Votação Nominal-Destaque de Emenda"
                },
                "type": {
                    "$ref": "#/definitions/swagger.ArticleTypeWithSpecificType"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-08-09T14:55:00.465814Z"
                },
                "user_rating": {
                    "type": "integer",
                    "example": 5
                },
                "view_later": {
                    "type": "boolean",
                    "example": true
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.Article"
                    }
                }
            }
        },
        "swagger.PropositionType": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string",
                    "example": "#C4170C"
                },
                "description": {
                    "type": "string",
                    "example": "Projeto de Lei"
                },
                "id": {
                    "type": "string",
                    "example": "111c1a6d-d061-40b2-ad39-ec714f05c81c"
                }
            }
        },
        "swagger.Resources": {
            "type": "object",
            "properties": {
                "article_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.ArticleType"
                    }
                },
                "deputies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.DeputyResource"
                    }
                },
                "event_situations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.EventSituation"
                    }
                },
                "event_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.EventType"
                    }
                },
                "external_authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.ExternalAuthor"
                    }
                },
                "legislative_bodies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.LegislativeBody"
                    }
                },
                "parties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.Party"
                    }
                },
                "proposition_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.PropositionType"
                    }
                }
            }
        },
        "swagger.User": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InByb2YiL..."
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-01-06T14:52:23.723959Z"
                },
                "email": {
                    "type": "string",
                    "example": "example@email.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "Lucas"
                },
                "id": {
                    "type": "string",
                    "example": "54b094b23-f426-89d2-843e-1335410b18df"
                },
                "last_name": {
                    "type": "string",
                    "example": "Santos"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InByb2YiL..."
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "user"
                    ]
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-01-06T16:02:29.854799Z"
                }
            }
        },
        "swagger.VotingArticle": {
            "type": "object",
            "properties": {
                "affected_propositions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.Article"
                    }
                },
                "average_rating": {
                    "type": "number",
                    "example": 3.5
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-05-18T23:19:00.465814Z"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.Article"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "d369b9bc-c226-4bbf-8fbb-fceed205845a"
                },
                "is_approved": {
                    "type": "boolean",
                    "example": true
                },
                "legislative_body": {
                    "$ref": "#/definitions/swagger.LegislativeBody"
                },
                "main_proposition": {
                    "$ref": "#/definitions/swagger.Article"
                },
                "newsletter": {
                    "$ref": "#/definitions/swagger.Article"
                },
                "number_of_ratings": {
                    "type": "integer",
                    "example": 254
                },
                "related_propositions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.Article"
                    }
                },
                "result_announced_at": {
                    "type": "string",
                    "example": "2023-05-18T20:17:32Z"
                },
                "result_content": {
                    "type": "string",
                    "example": "Aprovado o Substitutivo ao Projeto de Lei nº 1..."
                },
                "title": {
                    "type": "string",
                    "example": "Votação 3457539-42"
                },
                "type": {
                    "$ref": "#/definitions/swagger.ArticleType"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-18T23:19:00.465814Z"
                },
                "user_rating": {
                    "type": "integer",
                    "example": 4
                },
                "view_later": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v1",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Você na Câmara API",
	Description:      "Set of endpoints that make up the backend of the Você na Câmara platform, structured to enable communication between the services and the execution of the system's functionalities.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
