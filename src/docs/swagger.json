{
    "swagger": "2.0",
    "info": {
        "description": "Set of routes responsible for managing data manipulation in Você na Câmara applications.",
        "title": "Você na Câmara API",
        "contact": {
            "name": "Você na Câmara",
            "email": "email.vocenacamara@gmail.com"
        },
        "version": "v1"
    },
    "basePath": "/api/v1",
    "paths": {
        "/articles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for listing the most recent articles available on the platform.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "List most recent articles",
                "operationId": "GetArticles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article type ID",
                        "name": "typeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Part of the content of the articles, in the title or content",
                        "name": "content",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the deputy who drafted the proposition",
                        "name": "deputyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the party that drafted the proposition",
                        "name": "partyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the external author who drafted the proposition",
                        "name": "externalAuthorId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date from which the articles may have been created. Accepted format: YYYY-MM-DD",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date until which the articles may have been created. Accepted format: YYYY-MM-DD",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number. By default, it is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of articles returned per page. The default is 15 and the allowed values are between 1 and 100",
                        "name": "itemsPerPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerArticlePagination"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/articles/trending": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for listing trending articles on the platform.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "List trending articles",
                "operationId": "GetTrendingArticles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article type ID",
                        "name": "typeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Part of the content of the articles, in the title or content",
                        "name": "content",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the deputy who drafted the proposition",
                        "name": "deputyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the party that drafted the proposition",
                        "name": "partyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the external author who drafted the proposition",
                        "name": "externalAuthorId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date from which the articles may have been created. Accepted format: YYYY-MM-DD",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date until which the articles may have been created. Accepted format: YYYY-MM-DD",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number. By default, it is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of articles returned per page. The default is 15 and the allowed values are between 1 and 100",
                        "name": "itemsPerPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerArticlePagination"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/articles/trending/type": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for listing the trending articles by article types.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "List trending articles by article types",
                "operationId": "GetTrendingArticlesByTypeId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "List of IDs of the types of articles that should be returned (separated by commas). By default, it returns all types",
                        "name": "articleTypeIds",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of articles returned by type. The default is 5 and the allowed values are between 1 and 20",
                        "name": "itemsPerType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerArticleTypeWithArticles"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/articles/view-later": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for listing the articles bookmarked for later viewing by the user on the platform. The articles will be listed in the order in which the user bookmarked the articles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "List articles bookmarked for later viewing by the user",
                "operationId": "GetArticlesToViewLater",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article type ID",
                        "name": "typeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Part of the content of the articles, in the title or content",
                        "name": "content",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the deputy who drafted the proposition",
                        "name": "deputyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the party that drafted the proposition",
                        "name": "partyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the external author who drafted the proposition",
                        "name": "externalAuthorId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date from which the articles may have been created. Accepted format: YYYY-MM-DD",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date until which the articles may have been created. Accepted format: YYYY-MM-DD",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number. By default, it is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of articles returned per page. The default is 15 and the allowed values are between 1 and 100",
                        "name": "itemsPerPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerArticlePagination"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/articles/{articleId}/newsletter": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for looking up the details of an article of a newsletter by the article ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get article details by ID (Only for newsletter articles)",
                "operationId": "GetNewsletterArticleById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerNewsletterArticle"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "404": {
                        "description": "Requested resource not found",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/articles/{articleId}/proposition": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for looking up the details of an article of a proposition by the article ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get article details by ID (Only for proposition articles)",
                "operationId": "GetPropositionArticleById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerPropositionArticle"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "404": {
                        "description": "Requested resource not found",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/articles/{articleId}/rating": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for recording the user's rating of an article.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Rate article",
                "operationId": "SaveArticleRating",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Rating"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "404": {
                        "description": "Requested resource not found",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/articles/{articleId}/view-later": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for adding or removing the article from the list of articles bookmarked for later viewing by the user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Add or remove an article from the list of articles bookmarked for later viewing by the user",
                "operationId": "SaveArticleToViewLater",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ViewLater"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "404": {
                        "description": "Requested resource not found",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "This request is responsible for refreshing the user's access tokens on the platform.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access tokens",
                "operationId": "Refresh",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RefreshTokens"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerUser"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/auth/sign-in": {
            "post": {
                "description": "This request is responsible for signing the user into the platform.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign In",
                "operationId": "SignIn",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SignIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerUser"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/auth/sign-out": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for signing the user out of the platform.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign Out",
                "operationId": "SignOut",
                "responses": {
                    "204": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "This request is responsible for signing the user up to the platform.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign Up",
                "operationId": "SignUp",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SignUp"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerUser"
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "409": {
                        "description": "Some of the data provided is conflicting",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "422": {
                        "description": "Some of the data provided is invalid",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/resources": {
            "get": {
                "description": "This request is responsible for listing all the platform resources.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resources"
                ],
                "summary": "List all resources",
                "operationId": "GetResources",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.SwaggerResources"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/user/activate-account": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for activating the user's account, proving that the email address provided during registration really exists and belongs to the user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Activate user account",
                "operationId": "ActivateAccount",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserAccountActivation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.SwaggerUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "409": {
                        "description": "Some of the data provided is conflicting",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        },
        "/user/resend-activation-email": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This request is responsible for resending the user account activation email. Each time it is sent, a new code is generated, invalidating the previous code.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Resend user account activation email",
                "operationId": "ResendActivationEmail",
                "responses": {
                    "204": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Badly formatted request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "409": {
                        "description": "Some of the data provided is conflicting",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred while processing the request",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    },
                    "503": {
                        "description": "Some of the services/resources are temporarily unavailable",
                        "schema": {
                            "$ref": "#/definitions/response.SwaggerHttpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.Rating": {
            "type": "object",
            "properties": {
                "rating": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "request.RefreshTokens": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InByb2YiL..."
                }
            }
        },
        "request.SignIn": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@email.com"
                },
                "password": {
                    "type": "string",
                    "example": "luc@ssantos123"
                }
            }
        },
        "request.SignUp": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@email.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "Lucas"
                },
                "last_name": {
                    "type": "string",
                    "example": "Santos"
                },
                "password": {
                    "type": "string",
                    "example": "luc@ssantos123"
                }
            }
        },
        "request.UserAccountActivation": {
            "type": "object",
            "properties": {
                "activation_code": {
                    "type": "string",
                    "example": "NJBJQ3"
                }
            }
        },
        "request.ViewLater": {
            "type": "object",
            "properties": {
                "view_later": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "response.SwaggerArticle": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number",
                    "example": 3.5
                },
                "content": {
                    "type": "string",
                    "example": "Foi sancionado o projeto de lei que altera a Lei n° 11.033 para prorrogar o Regime Tributário..."
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-01-05T20:25:19Z"
                },
                "id": {
                    "type": "string",
                    "example": "b27947d6-3224-4479-8da4-7917ae16b34d"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://image.url.com/article/b27947d6-3224-4479-8da4-7917ae16b34d/image.png"
                },
                "number_of_ratings": {
                    "type": "integer",
                    "example": 452
                },
                "reference_date_time": {
                    "type": "string",
                    "example": "2024-01-05T20:25:19Z"
                },
                "title": {
                    "type": "string",
                    "example": "Novo projeto de lei impulsiona crescimento do setor portuário até 2028"
                },
                "type": {
                    "$ref": "#/definitions/response.SwaggerArticleType"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-01-05T20:25:19Z"
                },
                "user_rating": {
                    "type": "integer",
                    "example": 3
                },
                "view_later": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "response.SwaggerArticlePagination": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerArticle"
                    }
                },
                "items_per_page": {
                    "type": "integer",
                    "example": 15
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 4562
                }
            }
        },
        "response.SwaggerArticleType": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string",
                    "example": "#C4170C"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-08-14T12:22:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Projeto de Lei"
                },
                "id": {
                    "type": "string",
                    "example": "560206f4-7360-4e21-8e45-33026f7e0953"
                },
                "sort_order": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-08-14T12:22:00Z"
                }
            }
        },
        "response.SwaggerArticleTypeWithArticles": {
            "type": "object",
            "properties": {
                "articles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerArticle"
                    }
                },
                "color": {
                    "type": "string",
                    "example": "#C4170C"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-08-14T12:22:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Projeto de Lei"
                },
                "id": {
                    "type": "string",
                    "example": "560206f4-7360-4e21-8e45-33026f7e0953"
                },
                "sort_order": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-08-14T12:22:00Z"
                }
            }
        },
        "response.SwaggerDeputy": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2022-08-07T15:55:00Z"
                },
                "electoral_name": {
                    "type": "string",
                    "example": "José do Povo"
                },
                "id": {
                    "type": "string",
                    "example": "a4b04454-f426-44d2-843e-1331510b19ad"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://www.camara.leg.br/internet/deputado/bandep/87624.jpg"
                },
                "name": {
                    "type": "string",
                    "example": "José da Silva Santos"
                },
                "party": {
                    "$ref": "#/definitions/response.SwaggerParty"
                },
                "party_in_the_proposal": {
                    "$ref": "#/definitions/response.SwaggerParty"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2022-08-07T15:55:00Z"
                }
            }
        },
        "response.SwaggerDeputyResource": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2022-08-07T15:55:00Z"
                },
                "electoral_name": {
                    "type": "string",
                    "example": "José do Povo"
                },
                "id": {
                    "type": "string",
                    "example": "a4b04454-f426-44d2-843e-1331510b19ad"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://www.camara.leg.br/internet/deputado/bandep/87624.jpg"
                },
                "name": {
                    "type": "string",
                    "example": "José da Silva Santos"
                },
                "party": {
                    "$ref": "#/definitions/response.SwaggerParty"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2022-08-07T15:55:00Z"
                }
            }
        },
        "response.SwaggerExternalAuthor": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2020-12-13T18:37:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "9d543e6f-20e3-4895-83e4-26b6a976580e"
                },
                "name": {
                    "type": "string",
                    "example": "Organização Você na Câmara"
                },
                "type": {
                    "type": "string",
                    "example": "Org da Câmara"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-12-13T18:37:00Z"
                }
            }
        },
        "response.SwaggerHttpError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Something went wrong..."
                }
            }
        },
        "response.SwaggerNewsletterArticle": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number",
                    "example": 4.5
                },
                "content": {
                    "type": "string",
                    "example": "O presidente enviou ao Congresso Nacional um projeto de lei que permite a concessão de descontos fiscais..."
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-12-24T19:15:22Z"
                },
                "id": {
                    "type": "string",
                    "example": "7963a6dd-f0b8-4065-8e56-6d2a79626db7"
                },
                "number_of_ratings": {
                    "type": "integer",
                    "example": 743
                },
                "proposition_articles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerArticle"
                    }
                },
                "reference_date": {
                    "type": "string",
                    "example": "2023-12-23T16:34:14Z"
                },
                "reference_date_time": {
                    "type": "string",
                    "example": "2023-12-24T19:15:22Z"
                },
                "title": {
                    "type": "string",
                    "example": "Boletim do dia 26/02/2024"
                },
                "type": {
                    "$ref": "#/definitions/response.SwaggerArticleType"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-12-24T19:15:22Z"
                },
                "user_rating": {
                    "type": "integer",
                    "example": 5
                },
                "view_later": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "response.SwaggerParty": {
            "type": "object",
            "properties": {
                "acronym": {
                    "type": "string",
                    "example": "PVNC"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-05-19T18:10:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "9bb4028f-6fa8-493a-9fe8-e3bbd341c794"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://www.camara.leg.br/internet/Deputado/img/partidos/VNC.gif"
                },
                "name": {
                    "type": "string",
                    "example": "Partido Você na Câmara"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-05-19T18:10:00Z"
                }
            }
        },
        "response.SwaggerPropositionArticle": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number",
                    "example": 2.5
                },
                "content": {
                    "type": "string",
                    "example": "O presente requerimento foi elaborado pelos deputados..."
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-08-09T14:55:00Z"
                },
                "deputies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerDeputy"
                    }
                },
                "external_authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerExternalAuthor"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "9dc67bd9-674f-4e4d-9536-07485335c362"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://www.vnc.com.br/news/proposition/image/87624.jpg"
                },
                "newsletter_article": {
                    "$ref": "#/definitions/response.SwaggerArticle"
                },
                "number_of_ratings": {
                    "type": "integer",
                    "example": 249
                },
                "original_text_url": {
                    "type": "string",
                    "example": "https://www.camara.leg.br/proposicoesWeb/prop_mostrarintegra?codteor=4865485"
                },
                "reference_date_time": {
                    "type": "string"
                },
                "submitted_at": {
                    "type": "string",
                    "example": "2023-08-09T14:25:00Z"
                },
                "title": {
                    "type": "string",
                    "example": "Requerimento de Votação Nominal-Destaque de Emenda"
                },
                "type": {
                    "$ref": "#/definitions/response.SwaggerArticleType"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-08-09T14:55:00Z"
                },
                "user_rating": {
                    "type": "integer",
                    "example": 5
                },
                "view_later": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "response.SwaggerResources": {
            "type": "object",
            "properties": {
                "article_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerArticleType"
                    }
                },
                "deputies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerDeputyResource"
                    }
                },
                "external_authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerExternalAuthor"
                    }
                },
                "parties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SwaggerParty"
                    }
                }
            }
        },
        "response.SwaggerUser": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InByb2YiL..."
                },
                "created_at": {
                    "type": "string",
                    "example": "2022-09-23T18:20:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "example@email.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "Lucas"
                },
                "id": {
                    "type": "string",
                    "example": "54b094b23-f426-89d2-843e-1335410b18df"
                },
                "last_name": {
                    "type": "string",
                    "example": "Santos"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InByb2YiL..."
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "user"
                    ]
                },
                "updated_at": {
                    "type": "string",
                    "example": "2022-09-23T18:20:00Z"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}